/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface BdsIcon {
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'ariaLabel'?: string;
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'color'?: string;
    /**
    * Specifies the icon height (eg.: 50)
    */
    'height'?: string;
    /**
    * Specifies which icon to use from the built-in set of icons.
    */
    'name': string;
    /**
    * Specifies the theme to use outline or solid icons. Defaults to outline.
    */
    'theme': 'outline' | 'solid';
    /**
    * Specifies the icon width (eg.: 50)
    */
    'width'?: string;
  }
  interface BdsList {}
  interface SbpButton {}
}

declare global {


  interface HTMLBdsIconElement extends Components.BdsIcon, HTMLStencilElement {}
  var HTMLBdsIconElement: {
    prototype: HTMLBdsIconElement;
    new (): HTMLBdsIconElement;
  };

  interface HTMLBdsListElement extends Components.BdsList, HTMLStencilElement {}
  var HTMLBdsListElement: {
    prototype: HTMLBdsListElement;
    new (): HTMLBdsListElement;
  };

  interface HTMLSbpButtonElement extends Components.SbpButton, HTMLStencilElement {}
  var HTMLSbpButtonElement: {
    prototype: HTMLSbpButtonElement;
    new (): HTMLSbpButtonElement;
  };
  interface HTMLElementTagNameMap {
    'bds-icon': HTMLBdsIconElement;
    'bds-list': HTMLBdsListElement;
    'sbp-button': HTMLSbpButtonElement;
  }
}

declare namespace LocalJSX {
  interface BdsIcon {
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'ariaLabel'?: string;
    /**
    * Specifies the label to use for accessibility. Defaults to the icon name.
    */
    'color'?: string;
    /**
    * Specifies the icon height (eg.: 50)
    */
    'height'?: string;
    /**
    * Specifies which icon to use from the built-in set of icons.
    */
    'name': string;
    /**
    * Specifies the theme to use outline or solid icons. Defaults to outline.
    */
    'theme'?: 'outline' | 'solid';
    /**
    * Specifies the icon width (eg.: 50)
    */
    'width'?: string;
  }
  interface BdsList {}
  interface SbpButton {}

  interface IntrinsicElements {
    'bds-icon': BdsIcon;
    'bds-list': BdsList;
    'sbp-button': SbpButton;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'bds-icon': LocalJSX.BdsIcon & JSXBase.HTMLAttributes<HTMLBdsIconElement>;
      'bds-list': LocalJSX.BdsList & JSXBase.HTMLAttributes<HTMLBdsListElement>;
      'sbp-button': LocalJSX.SbpButton & JSXBase.HTMLAttributes<HTMLSbpButtonElement>;
    }
  }
}


